think about the condition:
	- when to begin the merge?
	- think as no recursion, but as 2nd order function
	
So, while high index > low index we should divide. I.e - length of the list > 1
Important: think about he call stack:

mergeSort(A): // A=[7,1,5,3,2,4,8,6]
	
|if len(A) > 1: // Conditional! difine the recursion bottom - when mergeSorn DO something EXCEPT calling itself!
|	m = len(A) / 2 	// m = 8-0/2 = 4
| 	l = A[:m]  		// l = A[:4] = [7,1,5,3]
|	r = A[m:]  		// r = A[4:] = [2,4,8,6]
->>	mergeSort(l)  // l = A[:4] = [7,1,5,3]
||		if len(A) > 1: // len(l) == 4
||			m = len(A) / 2 	// m = 2
|| 			l = A[:m]  		// l = A[:2] = [7,1]
||			r = A[m:]  		// r = A[2:] = [5,3]
-->>>		mergeSort(l) // l = A[:2] = [7,1] ----->>>> A itself is l !!!!
|||				if len(A) > 1: // len(l) == 2
|||					m = len(A) / 2 // m = 1
||| 				l = A[:m]  		// l = A[:1] = [7]
|||					r = A[m:]  		// r = A[1:] = [1]
--->>>>				mergeSort(l): // l = A[:1] == [7]
||||						if len(A) > 1: // len(A) == 1 ---> so here you exit the recursion and do something! RETURN from CallStack
--->>>>				mergeSort(r): // r = A[1:] == [1]
||||						if len(A) > 1: // len(A) == 1 ---> RETURN				

	
					l = [7]
					r = [1]					

					set A[0] to r[0] - value 1		//IT CHANGES THE l !!!!! It does not return something! it CHANGES the argument!
					set A[1] to l[0] - value 7		//IT CHANGES THE l !!!!!

-->>>		mergeSort(r) // r = A[2:] = [5,3]
|||				if len(A) > 1: // len(r) == 2
|||					m = len(A) / 2 // m = 1
||| 				l = A[:m]  		// l = A[:1] = [5]
|||					r = A[m:]  		// r = A[1:] = [3]
--->>>>				mergeSort(l): // l = A[:1] == [5]
||||						if len(A) > 1: // len(A) == 1 ---> so here you exit the recursion and do something! RETURN from CallStack
--->>>>				mergeSort(r): // r = A[1:] == [3]
||||						if len(A) > 1: // len(A) == 1 ---> RETURN				
					
					l = [5]
					r = [3]

					set A[0] to r[0] - value 3
					set A[1] to l[0] - value 5

			l = [1, 7]
			r = [3, 5]

			set A[0] to l[0] - value 1
			set A[1] to r[0] - value 3
			set A[2] to r[1] - value 5
			set A[3] to l[1] - value 7			